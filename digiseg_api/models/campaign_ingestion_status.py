# coding: utf-8

"""
    Digiseg API

    ### Digiseg API documentation  # Introduction  This API let you harness the power of Digisegs powerful and tracking-free segmentation engine.  Audiences by Digiseg are available in 50+ countries, probablistically mapping neighborhood characteristics to the IP addresses observed on the internet - Household targeting & measurement for the post-cookie world.  ## Developer SDKs  In addition to using these APIs directly through any HTTP client, we provide a set of API client SDKs for popular programming languages:  <div class=\"api-clients\">   <a class=\"api-client-box\" href=\"https://github.com/digiseg-labs/api-client-python\">     <i class=\"api-client-sdk-logo devicon-python-plain\"></i>     <p>API client for Python</p>   </a>   <a class=\"api-client-box\" href=\"https://github.com/digiseg-labs/api-client-go\">     <i class=\"api-client-sdk-logo devicon-go-original-wordmark\"></i>     <p>API client for Go</p>   </a> </div> <div class=\"api-clients-breaker\" />  ## Audience taxonomy  For a catalog of Digisegs audiences, refer to the [Audience list](https://digiseg.io/audiences-list).  There is also an interactive [Audience builder](https://digiseg.io/cookieless-audience-builder/) which lets you discover the targeting reach and power of combining various household characteristics into composite audiences. 

    The version of the OpenAPI document: 1.0.0
    Contact: support@digiseg.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import json
import pprint
import re  # noqa: F401
from enum import Enum



try:
    from typing import Self
except ImportError:
    from typing_extensions import Self


class CampaignIngestionStatus(str, Enum):
    """
    The status of the data collection of the campaign, indicating whether stats are available and representative.  * `no_data` means that the campaign has been created but no data has been received. * `active_ramping_up` means that data has been received, but not enough to provide meaningful stats yet. * `active_fulfilled` means that the campaign has received a good amount of data, but more data can still be added. * `finished_complete` means that the campaign has finished and is no longer open to receive data. * `finished_expired` means that the campaign has finished but not enough data was collected to provide meaningful stats. 
    """

    """
    allowed enum values
    """
    NO_DATA = 'no_data'
    ACTIVE_RAMPING_UP = 'active_ramping_up'
    ACTIVE_FULFILLED = 'active_fulfilled'
    FINISHED_COMPLETE = 'finished_complete'
    FINISHED_EXPIRED = 'finished_expired'

    @classmethod
    def from_json(cls, json_str: str) -> Self:
        """Create an instance of CampaignIngestionStatus from a JSON string"""
        return cls(json.loads(json_str))


